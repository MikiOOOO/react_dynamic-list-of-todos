{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","searchForTodos","useState","inputQuery","setInputQuery","todoStatus","setTodoStatus","useEffect","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","unselectedTodo","user","setUser","userId","href","name","App","setTodos","filteredTodos","setFilteredTodos","setSelectedTodo","ts","query","status","filter","todotitleLowered","toLowerCase","queryLowered","trim","split","Boolean","join","undefined","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeca0e66.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[],\n  selectTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n}\n\nexport const TodoList: React.FC<TodoListProps>\n= ({ todos, selectTodo, selectedTodo }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={\n              cn({ 'has-background-info-light': selectedTodo?.id === todo.id })\n            }\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span\n                  className=\"icon\"\n                  data-cy=\"iconCompleted\"\n                >\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': selectedTodo?.id !== todo.id,\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { useState, useEffect } from 'react';\nimport { Status } from '../../types/Status';\n\ninterface TodoFilterProps {\n  searchForTodos: (query: string, status: Status) => void,\n}\n\nexport const TodoFilter\n= ({ searchForTodos }: TodoFilterProps) => {\n  const [inputQuery, setInputQuery] = useState<string>('');\n  const [todoStatus, setTodoStatus] = useState<Status>('all');\n\n  useEffect(() => {\n    searchForTodos(inputQuery, todoStatus);\n  }, [todoStatus, inputQuery]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todoStatus}\n            onChange={(event) => {\n              setTodoStatus(event.target.value as Status);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputQuery}\n          onChange={(event) => {\n            setInputQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {inputQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setInputQuery('')}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ninterface TodoModalProps {\n  selectedTodo: Todo,\n  unselectedTodo: () => void,\n}\n\nexport const TodoModal: React.FC<TodoModalProps>\n= ({ selectedTodo, unselectedTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(setUser);\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={unselectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={cn({\n                'has-text-danger': !selectedTodo.completed,\n                'has-text-success': selectedTodo.completed,\n              })}\n              >\n                {`${selectedTodo.completed ? 'Done' : 'Planned'}`}\n\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(ts => {\n      setTodos(ts);\n      setFilteredTodos([...ts]);\n    });\n  }, []);\n\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const unselectTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  const searchForTodos = (query: string, status: Status) => {\n    if (!query && status === 'all') {\n      setFilteredTodos([...todos]);\n    } else {\n      let completed: boolean | undefined;\n\n      if (status !== 'all') {\n        completed = status === 'completed';\n      }\n\n      setFilteredTodos(todos.filter(todo => {\n        const todotitleLowered = todo.title.toLowerCase();\n        const queryLowered = query\n          .trim()\n          .toLowerCase()\n          .split(' ')\n          .filter(Boolean)\n          .join(' ');\n\n        if (completed !== undefined) {\n          return todotitleLowered.includes(queryLowered)\n            && todo.completed === completed;\n        }\n\n        return todotitleLowered.includes(queryLowered);\n      }));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter searchForTodos={searchForTodos} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length ? (\n                <TodoList\n                  todos={filteredTodos}\n                  selectTodo={selectTodo}\n                  selectedTodo={selectedTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal selectedTodo={selectedTodo} unselectedTodo={unselectTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}